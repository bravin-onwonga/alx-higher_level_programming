============================
Test for 2-matrix_divided.py
============================

``matrix_divided`` returns a new matrix after dividing all
elements in matrix by div

First import matrix_divided from 2-matrix_divided.py
::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now we run our tests
----------------------------

First, case for an expected matrix
::
	>>> matrix = [[6, 8, 11], [17, 3, 5], [36, 22, 41]]
	>>> matrix_divided(matrix, 4)
	[[1.5, 2.0, 2.75], [4.25, 0.75, 1.25], [9.0, 5.5, 10.25]]

Test with lists of varying length
::
	>>> matrix = [[3, 6, 9], [12, 18], [21, 24, 27]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Passing zero as a divider
::
	>>> matrix = [[3, 6, 9], [12, 18], [21, 24, 27]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test for values than are not int or floats
::
	>>> matrix = [[3, "Python", 9], [12, 18], [21, 24, 27]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
